/*
 * Script from NETTUTS.com [by James Padolsey]
 * @requires jQuery($), jQuery UI & sortable/draggable UI modules
 */
$(function(){
var iNettuts = {

    jQuery : $,

    settings : {
        columns : '.column',
        widgetSelector: '.widget',
        contentSelector: '.widget-content'
    },

    init : function () {
        this.attachStylesheet('inettuts.js.css');
        this.addWidgetControls();
        //this.makeSortable();
    },

	destroy : function () {
		handleSelector: ''
	},

    getWidgetSettings : function (id) {
        var $ = this.jQuery,
            settings = this.settings;
        return (id&&settings.widgetIndividual[id]) ? $.extend({},settings.widgetDefault,settings.widgetIndividual[id]) : settings.widgetDefault;
    },

    addWidgetControls : function () {
        var iNettuts = this,
            $ = this.jQuery,
            settings = this.settings;

        $(settings.widgetSelector).each(function () {

            $(this).append('<div class = "action"><div class = "action_buttons"><div class = "remove"></div><div class = "plus"></div><div class = "focus"></div><div class = "plus2"></div></div></div><div class = "widget-content"><h3>OPA GAGNAM STYLE</h3></div>');
        });

        $(document).on("click", ".remove", function(){
           $column = $(this).parent().parent().parent().parent();
					 count = $column.find(".widget").size();
					 if(count != 1)
              if(confirm('This widget will be removed, ok?')) {
                 $(this).parents(settings.widgetSelector).animate({
                 opacity: 0
              },function () {
                 $(this).wrap('<div/>').parent().slideUp(function () {
                    $(this).remove();
                  });
              });
            }
         })

        $(".widget, .action_buttons").live({
        mouseenter:
           function(){$(this).find('.action').show()},
        mouseleave:
           function(){$(this).find('.action').hide()}
       });

    },
    attachStylesheet : function (href) {
        var $ = this.jQuery;
        return $('<link href="' + href + '" rel="stylesheet" type="text/css" />').appendTo('head');
    }


           /* var thisWidgetSettings = iNettuts.getWidgetSettings(this.id);
            $('<div class="remove">CLOSE</div>').mousedown(function (e) {
                    e.stopPropagation();
                }).click(function () {
					$column = $(this).parent().parent().parent();
					count = $column.find(".widget").size();
					if(count == 1){}
					else
             if(confirm('This widget will be removed, ok?')) {
                $(this).parents(settings.widgetSelector).animate({
                    opacity: 0
                 },function () {
                     $(this).wrap('<div/>').parent().slideUp(function () {
                        $(this).remove();
                     });
                  });
              }
           return;}).appendTo($(settings.handleSelector, this));

        });
    },

    attachStylesheet : function (href) {
        var $ = this.jQuery;
        return $('<link href="' + href + '" rel="stylesheet" type="text/css" />').appendTo('head');
    },

    makeSortable : function () {
        var iNettuts = this,
            $ = this.jQuery,
            settings = this.settings,
            $sortableItems = (function () {
                var notSortable = '';
                $(settings.widgetSelector,$(settings.columns)).each(function (i) {
                    if (!iNettuts.getWidgetSettings(this.id).movable) {
                        if(!this.id) {
                            this.id = 'widget-no-id-' + i;
                        }
                        notSortable += '#' + this.id + ',';
                    }
                });
                return $('> li:not(' + notSortable + ')', settings.columns);
            })();

        $sortableItems.find(settings.handleSelector).css({
            cursor: 'pointer'
        }).mousedown(function (e) {
           // $sortableItems.css({width:''});
            $(this).parent().css({
                width: $(this).parent().width() + 'px'
            });
        }).mouseup(function () {
            if(!$(this).parent().hasClass('dragging')) {
               // $(this).parent().css({width:''});
            } else {
                $(settings.columns).sortable('disable');
            }


        });

        $(settings.columns).sortable({
            items: $sortableItems,
            connectWith: $(settings.columns),
            handle: settings.handleSelector,
            placeholder: 'widget-placeholder',
            forcePlaceholderSize: true,
            revert: 300,
            delay: 100,
            opacity: 0.8,
            containment: 'document',
            start: function (e,ui) {
                $(ui.helper).addClass('dragging');
            },
            stop: function (e,ui) {
                $(ui.item).css({width:''}).removeClass('dragging');
                $(settings.columns).sortable('enable');
            }
        });
    }*/

};

iNettuts.init();
});
